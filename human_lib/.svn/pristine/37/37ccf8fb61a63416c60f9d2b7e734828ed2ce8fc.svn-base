package shop.j980108.controller;

import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;
import shop.j980108.domain.ReservationVo;
import shop.j980108.domain.SeatVo;
import shop.j980108.service.ReservationService;
import shop.j980108.service.SeatService;

/**
 * @author 조윤정
 * @date 2021-10-27 ~
 * @name 자리 컨트롤러
 */

@Controller
@Log4j
@RequestMapping("seat/*")
@AllArgsConstructor
public class SeatController {
	private SeatService service;
	private ReservationService rservice;
	
	 @GetMapping("list")
	   public void list(Integer loc,Model model){
		 model.addAttribute("loc",loc);
		 model.addAttribute("revTime",service.getCurrentTime());
	      log.info("seat.list");
	   }
	 
		@GetMapping("getSeats")
		public @ResponseBody List<SeatVo> getSeats(SeatVo vo) {
			return service.getList(vo);
		}
		
		@GetMapping("choose")
		public void choose(Model model){
			log.info("seat.choose");
		}
		
		@PostMapping("list")
		public String chosen(ReservationVo vo,@RequestParam("revs")ArrayList<Integer>revList,RedirectAttributes rttr){
			log.info("chooseFrm.submit");
			log.info(vo);
			log.info(revList);
			vo.setRevList(revList);
	    	int rCode=rservice.makeRev(vo);
	    	if(rCode>0){
	    		rttr.addFlashAttribute("code",rCode);
	    		return "redirect:/seat/choose";
	    	}
			return "redirect:/seat/complete";
		}
		
		@GetMapping("complete")
		public void complete(ReservationVo vo,Model model){
			log.info("seat.complete");
		}
		
		@GetMapping("mypage")
		public void test(Model model){
			log.info("test");
			int hour=LocalTime.now().getHour();
			Date today = new Date();
			model.addAttribute("current", service.getCurrentTime());
			model.addAttribute("today",today);
			model.addAttribute("hour",hour);
			model.addAttribute("list", rservice.getMyRev("아이디1")); 
		 
		}
		
		@DeleteMapping("delete/{revNo}")
		public String delete(@PathVariable long revNo){
			log.info("cancel"+revNo);
			rservice.cancelRev(revNo);
			return "success";
		}

}
